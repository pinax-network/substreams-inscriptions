specVersion: v0.1.0
package:
  name: inscriptions
  version: v0.1.0
  url: https://github.com/pinax-network/substreams-inscriptions
  doc: Inscriptions

imports:
  database_change: https://github.com/streamingfast/substreams-database-change/releases/download/v1.3.1/substreams-database-change-v1.3.1.spkg
  sql: https://github.com/streamingfast/substreams-sink-sql/releases/download/protodefs-v1.0.3/substreams-sink-sql-protodefs-v1.0.3.spkg

binaries:
  default:
    type: wasm/rust-v1
    file: ./target/wasm32-unknown-unknown/release/inscriptions.wasm

protobuf:
  files:
    - inscriptions.proto
  importPaths:
    - ./proto/v1

modules:
  # - name: index_events_and_calls
  #   kind: blockIndex
  #   inputs:
  #     - map: all_events
  #     - map: all_calls
  #   output:
  #     type: proto:sf.substreams.index.v1.Keys
  #   doc: |
  #     `index_events_and_calls` sets the following keys on the block:
  #      * Event signatures evt_sig:0x0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef (signature in hex, prefixed by 0x)
  #      * Event address    evt_addr:0x0123456789abcdef0123456789abcdef01234567 (address in hex, prefixed by 0x)
  #      * Call contract    call_to:0x0123456789abcdef0123456789abcdef01234567 (contract address in hex, prefixed by 0x)
  #      * Caller           call_from:0x0123456789abcdef0123456789abcdef01234567 (caller address in hex, prefixed by 0x)
  #      * Call method      call_method:0x01234567 (4 bytes of method signature in hex, prefixed by 0x)

  # - name: map_inscriptions
  #   kind: map
  #   blockFilter:
  #     module: index_events_and_calls
  #     query:
  #       params: true
  #   inputs:
  #     - params: string
  #     - source: sf.ethereum.type.v2.Block
  #   output:
  #     type: proto:sf.substreams.ethereum.v1.Transactions
  #   doc: |
  #     `filtered_transactions` reads from ethereum blocks and applies a filter on the events (addresses and signatures) as well as calls (from, to and method).
  #     Supported operators are: logical or `||`, logical and `&&` and parenthesis: `()`
  #     Addresses and signatures to match must be written as 0x-prefixed hexadecimal, lowercase, prefixed by `evt_addr:`, `evt_sig:`, `call_to:`, `call_from:` or `call_method:`.
  #     Example: `((evt_addr:0x1234... || evt_addr:0x5678...) && evt_sig:0xdeadbeef...) || call_to:0x01010101...`

  - name: map_transactions
    kind: map
    doc: Extracts Inscription transactions from the block
    inputs:
      - source: sf.ethereum.type.v2.Block
    output:
      type: proto:inscriptions.types.v1.Transactions

  - name: map_operations
    kind: map
    doc: Extracts Inscription operation events from the block
    inputs:
      - map: map_transactions
    output:
      type: proto:inscriptions.types.v1.Operations

  - name: db_out
    kind: map
    inputs:
      - source: sf.substreams.v1.Clock
      - map: map_operations
    output:
      type: proto:sf.substreams.sink.database.v1.DatabaseChanges

sink:
  module: db_out
  type: sf.substreams.sink.sql.v1.Service
  config:
    schema: "./schema.sql"
    engine: clickhouse
    postgraphile_frontend:
      enabled: false
    pgweb_frontend:
      enabled: false

network: avalanche